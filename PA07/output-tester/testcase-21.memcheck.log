==9040== Memcheck, a memory error detector
==9040== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==9040== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==9040== Command: ./a.out images/corrupt-testcases/06-bad-comment-len.ee264 student-out-20_-
==9040== Parent PID: 9039
==9040== 
--9040-- 
--9040-- Valgrind options:
--9040--    --tool=memcheck
--9040--    --leak-check=full
--9040--    --verbose
--9040--    --log-file=memcheck-20.log
--9040-- Contents of /proc/version:
--9040--   Linux version 3.13.0-32-generic (buildd@kissel) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014
--9040-- Arch and hwcaps: AMD64, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--9040-- Page sizes: currently 4096, max supported 4096
--9040-- Valgrind library directory: /usr/lib/valgrind
--9040-- Reading syms from /tmp/.q8i4jh/a.out
--9040-- Reading syms from /lib/x86_64-linux-gnu/ld-2.19.so
--9040--   Considering /lib/x86_64-linux-gnu/ld-2.19.so ..
--9040--   .. CRC mismatch (computed 4cbae35e wanted 8d683c31)
--9040--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.19.so ..
--9040--   .. CRC is valid
--9040-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--9040--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--9040--   .. CRC mismatch (computed 37cdde19 wanted adc367dd)
--9040--    object doesn't have a symbol table
--9040--    object doesn't have a dynamic symbol table
--9040-- Scheduler: using generic scheduler lock implementation.
--9040-- Reading suppressions file: /usr/lib/valgrind/default.supp
==9040== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9040-by-bishop-on-???
==9040== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9040-by-bishop-on-???
==9040== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9040-by-bishop-on-???
==9040== 
==9040== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9040== don't want to do, unless you know exactly what you're doing,
==9040== or are doing some strange experiment):
==9040==   /usr/lib/valgrind/../../bin/vgdb --pid=9040 ...command...
==9040== 
==9040== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9040==   /path/to/gdb ./a.out
==9040== and then give GDB the following command
==9040==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=9040
==9040== --pid is optional if only one valgrind process is running
==9040== 
--9040-- REDIR: 0x4019ca0 (strlen) redirected to 0x38068331 (???)
--9040-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--9040--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--9040--   .. CRC mismatch (computed 329d6860 wanted c0186920)
--9040--    object doesn't have a symbol table
--9040-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--9040--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--9040--   .. CRC mismatch (computed 1fb85af8 wanted 2e9e3c16)
--9040--    object doesn't have a symbol table
==9040== WARNING: new redirection conflicts with existing -- ignoring it
--9040--     old: 0x04019ca0 (strlen              ) R-> (0000.0) 0x38068331 ???
--9040--     new: 0x04019ca0 (strlen              ) R-> (2007.0) 0x04c2e1a0 strlen
--9040-- REDIR: 0x4019a50 (index) redirected to 0x4c2dd50 (index)
--9040-- REDIR: 0x4019c70 (strcmp) redirected to 0x4c2f2f0 (strcmp)
--9040-- REDIR: 0x401a9c0 (mempcpy) redirected to 0x4c31da0 (mempcpy)
--9040-- Reading syms from /lib/x86_64-linux-gnu/libc-2.19.so
--9040--   Considering /lib/x86_64-linux-gnu/libc-2.19.so ..
--9040--   .. CRC mismatch (computed 2b8f2acf wanted 60636809)
--9040--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.19.so ..
--9040--   .. CRC is valid
--9040-- REDIR: 0x4ec4ba0 (strcasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--9040-- REDIR: 0x4ec6e90 (strncasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--9040-- REDIR: 0x4ec4370 (memcpy@GLIBC_2.2.5) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--9040-- REDIR: 0x4ec2600 (rindex) redirected to 0x4c2da30 (rindex)
--9040-- REDIR: 0x4ebeeb0 (strcmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--9040-- REDIR: 0x4f78090 (__strcmp_ssse3) redirected to 0x4c2f1b0 (strcmp)
--9040-- REDIR: 0x4ec0900 (strlen) redirected to 0x4c2e0e0 (strlen)
--9040-- REDIR: 0x4ecb900 (strchrnul) redirected to 0x4c319b0 (strchrnul)
--9040-- REDIR: 0x4eba590 (malloc) redirected to 0x4c2ab10 (malloc)
--9040-- REDIR: 0x4ec3250 (__GI_strstr) redirected to 0x4c32030 (__strstr_sse2)
--9040-- REDIR: 0x4ec95c0 (__GI_memcpy) redirected to 0x4c2fc90 (__GI_memcpy)
==9040== Warning: set address range perms: large range [0x3a00e040, 0xb87f5ebe) (undefined)
--9040-- REDIR: 0x4ebac30 (free) redirected to 0x4c2bd80 (free)
==9040== Warning: set address range perms: large range [0x3a00e028, 0xb87f5ed6) (noaccess)
==9040== Conditional jump or move depends on uninitialised value(s)
==9040==    at 0x400A0F: cleanUp (answer07.c:61)
==9040==    by 0x400BFC: Image_load (answer07.c:131)
==9040==    by 0x401C32: main (<stdin>:61)
==9040== 
==9040== 
==9040== HEAP SUMMARY:
==9040==     in use at exit: 0 bytes in 0 blocks
==9040==   total heap usage: 3 allocs, 3 frees, 2,122,219,726 bytes allocated
==9040== 
==9040== All heap blocks were freed -- no leaks are possible
==9040== 
==9040== Use --track-origins=yes to see where uninitialised values come from
==9040== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9040== 
==9040== 1 errors in context 1 of 1:
==9040== Conditional jump or move depends on uninitialised value(s)
==9040==    at 0x400A0F: cleanUp (answer07.c:61)
==9040==    by 0x400BFC: Image_load (answer07.c:131)
==9040==    by 0x401C32: main (<stdin>:61)
==9040== 
==9040== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
